{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\r\nimport iziToast from \"izitoast\";\r\nimport \"izitoast/dist/css/iziToast.min.css\";\r\nimport \"flatpickr/dist/flatpickr.min.css\";\r\n\r\nconst dateTimePicker = document.querySelector(\"input#datetime-picker\");\r\nconst button = document.querySelector('button[data-start]');\r\nconst dataDays = document.querySelector('[data-days]');\r\nconst dataHours = document.querySelector('[data-hours]');\r\nconst dataMinutes = document.querySelector('[data-minutes]');\r\nconst dataSeconds = document.querySelector('[data-seconds]');\r\n\r\ndisableElement(button);\r\n\r\nfunction disableElement(...elements) {\r\n    elements.forEach((element) => element.classList.add('disabled'));\r\n}\r\n\r\nfunction enableElement(...elements) {\r\n    elements.forEach((element) => element.classList.remove('disabled'));\r\n}\r\n\r\nfunction validatePickedTime(timestamp) {\r\n    const isFutureDate = timestamp > Date.now();\r\n    if (isFutureDate) {\r\n        enableElement(button);\r\n    } else {\r\n        disableElement(button);\r\n        iziToast.warning({\r\n            message: \"Please choose a date in the future\",\r\n            position: \"topRight\"\r\n        });\r\n    }\r\n    return isFutureDate;\r\n}\r\n\r\nconst options = {\r\n    enableTime: true,\r\n    time_24hr: true,\r\n    defaultDate: new Date(),\r\n    minuteIncrement: 1,\r\n    onClose(selectedDates) {\r\n        const pickedDateTimestamp = selectedDates[0].getTime();\r\n        validatePickedTime(pickedDateTimestamp);\r\n    }\r\n};\r\n\r\nfunction updateClockFace({ days, hours, minutes, seconds }) {\r\n    dataDays.textContent = days;\r\n    dataHours.textContent = hours;\r\n    dataMinutes.textContent = minutes;\r\n    dataSeconds.textContent = seconds;\r\n}\r\n\r\nclass Timer {\r\n    constructor({ onTick, endTime }) {\r\n        this.onTick = onTick;\r\n        this.endTime = endTime;\r\n        this.intervalId = null;\r\n    }\r\n\r\n    start() {\r\n        disableElement(dateTimePicker, button);\r\n        this.intervalId = setInterval(() => {\r\n            const remainingTime = this.endTime - Date.now();\r\n\r\n            if (remainingTime <= 0) {\r\n                clearInterval(this.intervalId);\r\n                enableElement(dateTimePicker);\r\n                updateClockFace(this.convertMs(0));\r\n                return;\r\n            }\r\n\r\n            this.onTick(this.convertMs(remainingTime));\r\n        }, 1000);\r\n    }\r\n\r\n    convertMs(ms) {\r\n        const day = 86400000;\r\n        const hour = 3600000;\r\n        const minute = 60000;\r\n        const second = 1000;\r\n\r\n        const days = this.pad(Math.floor(ms / day));\r\n        const hours = this.pad(Math.floor((ms % day) / hour));\r\n        const minutes = this.pad(Math.floor((ms % hour) / minute));\r\n        const seconds = this.pad(Math.floor((ms % minute) / second));\r\n\r\n        return { days, hours, minutes, seconds };\r\n    }\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, \"0\");\r\n    }\r\n}\r\n\r\nfunction handleStart() {\r\n    const selectedTime = dateTimePicker.value ? new Date(dateTimePicker.value).getTime() : null;\r\n    if (selectedTime && validatePickedTime(selectedTime)) {\r\n        const timer = new Timer({ onTick: updateClockFace, endTime: selectedTime });\r\n        timer.start();\r\n    }\r\n}\r\n\r\nflatpickr(dateTimePicker, options);\r\n"],"names":["dateTimePicker","button","disableElement","elements","element","enableElement","validatePickedTime","timestamp","isFutureDate","iziToast","options","selectedDates","pickedDateTimestamp","flatpickr"],"mappings":"+IAKA,MAAMA,EAAiB,SAAS,cAAc,uBAAuB,EAC/DC,EAAS,SAAS,cAAc,oBAAoB,EACzC,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAE3DC,EAAeD,CAAM,EAErB,SAASC,KAAkBC,EAAU,CACjCA,EAAS,QAASC,GAAYA,EAAQ,UAAU,IAAI,UAAU,CAAC,CACnE,CAEA,SAASC,KAAiBF,EAAU,CAChCA,EAAS,QAASC,GAAYA,EAAQ,UAAU,OAAO,UAAU,CAAC,CACtE,CAEA,SAASE,EAAmBC,EAAW,CACnC,MAAMC,EAAeD,EAAY,KAAK,IAAG,EACzC,OAAIC,EACAH,EAAcJ,CAAM,GAEpBC,EAAeD,CAAM,EACrBQ,EAAS,QAAQ,CACb,QAAS,qCACT,SAAU,UACtB,CAAS,GAEED,CACX,CAEA,MAAME,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAsBD,EAAc,CAAC,EAAE,QAAO,EACpDL,EAAmBM,CAAmB,CACzC,CACL,EA2DAC,EAAUb,EAAgBU,CAAO"}